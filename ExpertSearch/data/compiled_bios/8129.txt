David Darais | Department of Computer Science | The University of Vermont Jump to navigation Please turn on Javascript for added functionality apply Search myUVM Search Website Search Directory A to Z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z UVM Forward Department of Computer Science Department of Computer Science About UsVision, Mission, and Goals Department News Prospective Student Resources Undergraduate ProgramsOverview of Undergraduate Programs Undergraduate Advising Computer Science (B.S.) Computer Science and Information Systems (B.S.) Computer Science (B.A.) Data Science (B.S.) Minor in Computer Science Minor in CS Education Certificate in Computer Software Accelerated Masters (M.S.) Graduate ProgramsOverview of Graduate Programs Computer Science (M.S.) Complex Systems and Data Science (M.S.) Computer Science (Ph.D.) Certificate of Graduate Study in Complex Systems Complex Systems and Data Science (CSDS), PhD Graduate Student Profiles Accelerated Masters (M.S.) Courses Faculty & StaffFaculty & Staff Faculty Policies Career & Internship Opportunities Contact Us College of Engineering and Mathematical Sciences menu Department of Computer Science David Darais Adjunct Assistant Professor, Computer Science David is Adjunct Assistant Professor at the University of Vermont and Principal Scientist at Galois, Inc., an R&D lab that specializes in secure software development. David builds new programming languages and analysis tools that help programmers build reliable software for security-sensitive and privacy-sensitive applications. In particular, David's tools focus on symbolic software analysis methods to prove the absence of entire classes of defects, i.e., not just fixing the next bug, but showing the absence of the last bug. Publications Zero Knowledge Static Program Analysis. Zhiyong Fang, David Darais, Joe Near, Yupeng Zhang. To appear in Computer and Communications Security (CCS). ACM, 2021.A Language for Probabilistically Oblivious Computation. David Darais, Ian Sweet, Chang Liu, Michael Hicks. Principles of Programming Languages (POPL). ACM, 2020.Proof Carrying Network Code. Christian Skalka, John Ring, David Darais, Minseok Kwon, Sahil Gupta, Kyle Diller, Steffan Smolka, Nate Foster. Computer and Communications Security (CCS). ACM, 2019.Duet: An Expressive Higher-order Language and Linear Type System for Statically Enforcing Differential Privacy. Joseph P. Near, David Darais, Chike Abuah, Tim Stevens, Pranav Gaddamadugu, Lun Wang, Neel Somani, Mu Zhang, Nikhil Sharma, Alex Shan, Dawn Song. Object-oriented Programming, Systems, Languages, and Applications (OOPSLA). ACM, 2019. ACM SIGPLAN Distinguished Paper Award.Abstracting Definitional Interpreters. David Darais, Nicholas Labich, Phc C. Nguyn, David Van Horn. International Conference on Functional Programming (ICFP). ACM, 2017.Galois Transformers and Modular Abstract Interpreters: Reusable Metatheory for Program Analysis. David Darais, Matthew Might, David Van Horn. Object-Oriented Programming, Systems, Languages & Applications (OOPSLA). ACM, 2015.Functional Pearl: Parsing with Derivatives. Matthew Might, David Darais, Daniel Spiewak. International Conference on Functional Programming (ICFP). ACM, 2011. Areas of Expertise and/or Research Programming analysis, mechanized proofs, software defined networking, differential privacy, secure multiparty computation Education University of Utah, B.S. Harvard University, M.S. University of Maryland, Ph.D. Contact Email: David.Darais@gmail.com Website(s): http://david.darais.com/ Courses Taught UVM CS 225: Programming Languages / Spring 2020UVM CS 295A: Software Verification / Fall 2019UVM CS 225: Programming Languages / Spring 2019UVM CS 295A: Software Verification / Fall 2018UVM CS 225: Programming Languages / Spring 2018 The University of Vermont Burlington, VT 05405 Contact UVM Accessibility Privacy/Terms of Use 2021
